# Ex.No: 10 Learning â€“ Use Supervised Learning  
### DATE:04-11-2024                                                                            
### REGISTER NUMBER :212222060051
### AIM: 
To write a program to train the classifier for Smart waste management system.
###  Algorithm:

### Program:
# Import necessary libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Simulated Waste Data (could be replaced with actual data)
data = {
    'Country': ['Japan', 'China', 'India', 'Russia'],
    'WasteGeneratedPerYear': [45000000, 60000000, 70000000, 30000000],  # in tons
    'WasteToEnergyRate': [0.7, 0.4, 0.5, 0.3],  # Percentage of waste converted to energy
    'RecyclingRate': [0.2, 0.25, 0.3, 0.15],  # Recycling percentage
    'LandfillRate': [0.1, 0.35, 0.2, 0.55],  # Percentage sent to landfills
    'EnergyProducedPerTon': [600, 400, 450, 350]  # Energy output per ton of waste in kWh
}

# Convert to DataFrame
df = pd.DataFrame(data)

# Calculate total energy produced from WtE process for each country
df['TotalEnergyProduced'] = df['WasteGeneratedPerYear'] * df['WasteToEnergyRate'] * df['EnergyProducedPerTon']

# Compare environmental impact (Lower landfill rate and higher recycling rate are better)
df['EnvironmentalImpactScore'] = (df['LandfillRate'] * 0.5 + df['RecyclingRate'] * -0.5)  # Simple scoring model

# Print the DataFrame
print(df)

# Visualization of Waste-to-Energy Efficiency
plt.figure(figsize=(10, 6))
sns.barplot(x='Country', y='WasteToEnergyRate', data=df)
plt.title('Waste-to-Energy Efficiency by Country')
plt.xlabel('Country')
plt.ylabel('WtE Efficiency Rate')
plt.show()

# Visualization of Total Energy Produced
plt.figure(figsize=(10, 6))
sns.barplot(x='Country', y='TotalEnergyProduced', data=df)
plt.title('Total Energy Produced from Waste (kWh)')
plt.xlabel('Country')
plt.ylabel('Energy Produced (kWh)')
plt.show()

# Machine Learning for Waste Prediction and Optimization (Simple Linear Regression)

# Simulated waste generation data over time for a specific country
waste_data = {
    'Year': np.arange(2010, 2024),
    'WasteGenerated': [42, 44, 45, 47, 46, 48, 49, 51, 50, 52, 53, 55, 54, 56]  # in millions of tons
}
waste_df = pd.DataFrame(waste_data)

# Split data into training and test sets
X = waste_df[['Year']]
y = waste_df['WasteGenerated']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Predict future waste generation
y_pred = model.predict(X_test)

# Print model performance
print(f'Mean Squared Error: {mean_squared_error(y_test, y_pred)}')

# Predict waste generation for future years (2024-2030)
future_years = pd.DataFrame({'Year': np.arange(2024, 2031)})
future_waste_pred = model.predict(future_years)
print("Future Waste Generation Predictions (2024-2030):")
print(future_waste_pred)

# Plot waste generation predictions
plt.figure(figsize=(10, 6))
plt.plot(waste_df['Year'], waste_df['WasteGenerated'], label='Actual Waste Generated', marker='o')
plt.plot(future_years['Year'], future_waste_pred, label='Predicted Future Waste', linestyle='--', marker='x')
plt.title('Waste Generation Prediction (2010-2030)')
plt.xlabel('Year')
plt.ylabel('Waste Generated (million tons)')
plt.legend()
plt.show()


### Output:
 Country  WasteGeneratedPerYear  WasteToEnergyRate  RecyclingRate  \
0   Japan               45000000                0.7           0.20   
1   China               60000000                0.4           0.25   
2   India               70000000                0.5           0.30   
3  Russia               30000000                0.3           0.15   

   LandfillRate  EnergyProducedPerTon  TotalEnergyProduced  \
0          0.10                   600         1.890000e+10   
1          0.35                   400         9.600000e+09   
2          0.20                   450         1.575000e+10   
3          0.55                   350         3.150000e+09   

   EnvironmentalImpactScore  
0                     -0.05  
1                      0.05  
2                     -0.05  
3                      0.20  


Mean Squared Error: 1.0771965769574594
Future Waste Generation Predictions (2024-2030):
[56.55040092 57.50286369 58.45532646 59.40778923 60.360252   61.31271478
 62.26517755]


### Result:
Thus the system was trained successfully and the prediction was carried out.
